{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red242\green242\blue242;\red31\green124\blue26;
\red83\green123\blue3;\red118\green0\blue120;}
{\*\expandedcolortbl;;\cssrgb\c20000\c20000\c20000;\cssrgb\c96078\c96078\c96078;\cssrgb\c13333\c54510\c13333;
\cssrgb\c39608\c54510\c0;\cssrgb\c54510\c0\c54510;}
\margl1440\margr1440\vieww20400\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl360\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 docker build -t friendlyname .  \cf4 \strokec4 # Create image using this directory's Dockerfile\cf2 \strokec2 \
docker run -p 4000:80 friendlyname  \cf4 \strokec4 # Run "friendlyname" mapping port 4000 to 80\cf2 \strokec2 \
docker run -d -p 4000:80 friendlyname         \cf4 \strokec4 # Same thing, but in detached mode\cf2 \strokec2 \
docker container ls                                \cf4 \strokec4 # List all running containers\cf2 \strokec2 \
docker container ls -a             \cf4 \strokec4 # List all containers, even those not running\cf2 \strokec2 \
docker container stop <\cf5 \strokec5 hash\cf2 \strokec2 >           \cf4 \strokec4 # Gracefully stop the specified container\cf2 \strokec2 \
docker container \cf5 \strokec5 kill\cf2 \strokec2  <\cf5 \strokec5 hash\cf2 \strokec2 >         \cf4 \strokec4 # Force shutdown of the specified container\cf2 \strokec2 \
docker container rm <\cf5 \strokec5 hash\cf2 \strokec2 >        \cf4 \strokec4 # Remove specified container from this machine\cf2 \strokec2 \
docker container rm \cf6 \strokec6 $(\cf2 \strokec2 docker container ls -a -q\cf6 \strokec6 )\cf2 \strokec2          \cf4 \strokec4 # Remove all containers\cf2 \strokec2 \
docker image ls -a                             \cf4 \strokec4 # List all images on this machine\cf2 \strokec2 \
docker image rm <image id>            \cf4 \strokec4 # Remove specified image from this machine\cf2 \strokec2 \
docker image rm \cf6 \strokec6 $(\cf2 \strokec2 docker image ls -a -q\cf6 \strokec6 )\cf2 \strokec2    \cf4 \strokec4 # Remove all images from this machine\cf2 \strokec2 \
docker login             \cf4 \strokec4 # Log in this CLI session using your Docker credentials\cf2 \strokec2 \
docker tag <image> username/repository:tag  \cf4 \strokec4 # Tag <image> for upload to registry\cf2 \strokec2 \
docker push username/repository:tag            \cf4 \strokec4 # Upload tagged image to registry\cf2 \strokec2 \
docker run username/repository:tag                   \cf4 \strokec4 # Run image from a registry\cf2 \strokec2 \
}